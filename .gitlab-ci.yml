#
# Gitlab CI/CD : Build archive and Docker images and deploy on Openshift
#
# Pour gérer les déploiements dans les différents environnement s (d01, r01, p01),
# 3 environnements gitlab ont été créer et 
# 3 variables NAMESPACE_ENV associées sont renseignées 
# avec les 3 valeurs {d01, r01, p01}.
# Cela permet de mutulialiser tous les fichiers de déploiements ainsi que toutes les étapes de build.
# le 'stage' de déploiement en production est forcément différent du fait qu'il DOIT être manuel

variables:
    TRIGRAMME: arb
    REPLICA_ENV: 1
    
################################################################################
#    Anchors
################################################################################
.build_and_push_image: &build_and_push_image
  - docker build --pull --tag "$CI_REGISTRY_IMAGE/$IMAGE_NAME:latest" --build-arg NAMESPACE_ENV=$NAMESPACE_ENV --build-arg DB_HOST_ENV=$POSTGRES_SERVER --build-arg  DB_PORT_ENV=$POSTGRES_PORT --build-arg  DB_NAME_ENV=$POSTGRES_DB --build-arg  DB_USER_ENV=$POSTGRES_USER  .
  - docker push "$CI_REGISTRY_IMAGE/$IMAGE_NAME:latest"

# Docker Authentification anchor
.docker_login: &docker_login
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

# Set_env : copying env sample file and replace values
.set_env: &set_env
    - echo "# Configuration generated by Gitlab CI. (#$CI_BUILD_ID)" > .env 
    - echo "#" >> .env
    - cat .env.example >> .env
    - sed -i "s/__POSTGRES_DB__/$POSTGRES_DB/g" .env
    - sed -i "s/__POSTGRES_PASSWORD__/$POSTGRES_PASSWORD/g" .env
    - sed -i "s/__POSTGRES_PORT__/$POSTGRES_PORT/g" .env 
    - sed -i "s/__POSTGRES_SERVER__/$POSTGRES_SERVER-$NAMESPACE_ENV/g" .env
    - sed -i "s/__POSTGRES_USER__/$POSTGRES_USER/g" .env
    - sed -i "s/__POSTGRES_SCHEMA__/$POSTGRES_SCHEMA/g" .env

# Deployment preparation anchor
.prepare_deployment: &prepare_deployment
  - export NO_PROXY=grandlyon.fr
  - export KUBECONFIG=$KUBECONFIG_DEV
  - echo "Preparing Deployment on $NAMESPACE ($NAMESPACE_ENV)"

  # Secrets
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/secrets/database-secret.yml

  # PVC Access
  - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/pods/pvc-calqul.yml
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/pods/pvc-calqul.yml

  # DB deployment file
  - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/pods/db-calqul.yml
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/pods/db-calqul.yml
  - sed -i "s/__POSTGRES_DB__/$POSTGRES_DB/g" deployment/pods/db-calqul.yml 
  - sed -i "s/__POSTGRES_PASSWORD__/$POSTGRES_PASSWORD/g" deployment/pods/db-calqul.yml 
  - sed -i "s/__POSTGRES_PORT__/$POSTGRES_PORT/g" deployment/pods/db-calqul.yml 
  - sed -i "s/__POSTGRES_SERVER__/$POSTGRES_SERVER-$NAMESPACE_ENV/g" deployment/pods/db-calqul.yml 
  - sed -i "s/__POSTGRES_USER__/$POSTGRES_USER/g" deployment/pods/db-calqul.yml 
  - sed -i "s/__POSTGRES_SCHEMA__/$POSTGRES_SCHEMA/g" deployment/pods/db-calqul.yml 

  # DB service file
  - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/services/db-calqul.yml
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/services/db-calqul.yml

  # Job deployment file
  - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/jobs/master-calqul.yml
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/jobs/master-calqul.yml

  # Git-lfs deployment file For test only
  # - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/pods/git-calqul.yml
  # - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/pods/git-calqul.yml

  # Git-lfs deployment file
  - sed -i "s/__NAMESPACE__/$NAMESPACE/g" deployment/git-calqul.yml
  - sed -i "s/__NAMESPACE_ENV__/$NAMESPACE_ENV/g" deployment/git-calqul.yml

# Applying openshift conf anchor
.apply_confs: &apply_confs
  # Secrets
  - oc delete secret database-secret-$NAMESPACE_ENV
  - oc apply -f deployment/secrets/database-secret.yml

  # PVC Access
  - oc delete pods --selector pod-name=calqul-pvc-access-$NAMESPACE_ENV #--grace-period=0 --force
  - oc apply -f deployment/pods/pvc-calqul.yml

  # Db
  - oc delete pods --selector pod-name=calqul-db-$NAMESPACE_ENV #--grace-period=0 --force
  - oc apply -f deployment/pods/db-calqul.yml
  - oc apply -f deployment/services/db-calqul.yml
  
  # Git-lfs for test only
  # - oc delete pods --selector pod-name=calqul-git-lfs-$NAMESPACE_ENV #--grace-period=0 --force
  # - oc apply -f deployment/pods/git-calqul.yml

  # Git-lfs
  # - oc delete pods --selector pod-name=calqul-git-lfs-$NAMESPACE_ENV #--grace-period=0 --force
  # - oc apply -f deployment/git-calqul.yml

  # Job
  - oc delete jobs --selector job-name=calqul-master-job-$NAMESPACE_ENV 
  - oc create -f deployment/jobs/master-calqul.yml
  
################################################################################
#    CI/CD Stages
################################################################################
stages:
  - Build Calqul
  - Deploy Calqul
  - Deploy Calqul Production

# *********************************************************************************************
# * BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD BUILD *
# *********************************************************************************************

Build Calqul Python:
  stage: Build Calqul
  environment: dev
  variables:
    DOCKER_TLS_CERTDIR: ""
    IMAGE_NAME: calqul-python-$NAMESPACE_ENV
    IMAGE_DIR: ./Dockerfiles/python
  services:
    - docker:dind
  script:
    - *docker_login
    - cd $IMAGE_DIR
    - *set_env
    - *build_and_push_image
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes: # build image only if sources have changed. 
      - Dockerfiles/python/Dockerfile # Image definition has changed 
      - Dockerfiles/python/scripts/* # Python scripts have changed
      - .gitlab-ci.yml
  tags:
    - build-push-to-registry


Build Calqul Postgis:
  stage: Build Calqul
  environment: dev
  variables:
    DOCKER_TLS_CERTDIR: ""
    IMAGE_NAME: calqul-db-$NAMESPACE_ENV
    IMAGE_DIR: ./Dockerfiles/db
  services:
    - docker:dind
  script:
    - *docker_login
    - cd $IMAGE_DIR
    - *build_and_push_image
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes: # build image only if sources have changed. 
      - Dockerfiles/db/**/* # db scripts have changed
      - .gitlab-ci.yml
  tags:
    - build-push-to-registry

Build Calqul Git-lfs:
  stage: Build Calqul
  environment: dev
  variables:
    DOCKER_TLS_CERTDIR: ""
    IMAGE_NAME: calqul-git-lfs-$NAMESPACE_ENV
    IMAGE_DIR: ./Dockerfiles/git
  services:
    - docker:dind
  script:
    - *docker_login
    - cd $IMAGE_DIR
    - *build_and_push_image
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes: # build image only if sources have changed. 
      - Dockerfiles/git/**/* # db scripts have changed
      - .gitlab-ci.yml
  tags:
    - build-push-to-registry
# *********************************************************************************************
# * DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLOY DEPLO *
# *********************************************************************************************

Deploy Calqul:
  stage: Deploy Calqul
  environment: dev
  variables:
    NAMESPACE: "ns-$TRIGRAMME-$NAMESPACE_ENV"
  before_script:
    - *prepare_deployment
  script:
   - *apply_confs
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  tags:
    - ns-arb-d01

# *********************************************************************************************
# * MAIN BRANCH MAIN BRANCH MAIN BRANCH MAIN BRANCH MAIN BRANCH MAIN BRANCH MAIN BRANCH MAIN  *
# *********************************************************************************************

# BUILD

# DEPLOY
Deploy Calqul Production:
  stage: Deploy Calqul Production
  environment: production
  variables:
    NAMESPACE: "ns-$TRIGRAMME-$NAMESPACE_ENV"
  before_script:
    - *prepare_deployment
  script:
   - *apply_confs
  only:
    - main
  tags:
    # In production, the namespace will be different, as we can't put variables here :(,
    # we will need anorher stage only for procudtion branch.
    - ns-arb-d01
